// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type User struct {
	Id     string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Pseudo string   `protobuf:"bytes,2,opt,name=pseudo" json:"pseudo,omitempty"`
	Mail   string   `protobuf:"bytes,3,opt,name=mail" json:"mail,omitempty"`
	Series []*Serie `protobuf:"bytes,4,rep,name=series" json:"series,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetPseudo() string {
	if m != nil {
		return m.Pseudo
	}
	return ""
}

func (m *User) GetMail() string {
	if m != nil {
		return m.Mail
	}
	return ""
}

func (m *User) GetSeries() []*Serie {
	if m != nil {
		return m.Series
	}
	return nil
}

func init() {
	proto.RegisterType((*User)(nil), "protobuf.User")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 135 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x2d, 0x4e, 0x2d,
	0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x00, 0x53, 0x49, 0xa5, 0x69, 0x52, 0xdc, 0xc5,
	0xa9, 0x45, 0x99, 0xa9, 0x10, 0x61, 0xa5, 0x6c, 0x2e, 0x96, 0xd0, 0xe2, 0xd4, 0x22, 0x21, 0x3e,
	0x2e, 0xa6, 0xcc, 0x14, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0xa6, 0xcc, 0x14, 0x21, 0x31,
	0x2e, 0xb6, 0x82, 0xe2, 0xd4, 0xd2, 0x94, 0x7c, 0x09, 0x26, 0xb0, 0x18, 0x94, 0x27, 0x24, 0xc4,
	0xc5, 0x92, 0x9b, 0x98, 0x99, 0x23, 0xc1, 0x0c, 0x16, 0x05, 0xb3, 0x85, 0xd4, 0xb9, 0xd8, 0xc0,
	0x46, 0x16, 0x4b, 0xb0, 0x28, 0x30, 0x6b, 0x70, 0x1b, 0xf1, 0xeb, 0xc1, 0xec, 0xd2, 0x0b, 0x06,
	0x89, 0x07, 0x41, 0xa5, 0x93, 0xd8, 0xc0, 0xe2, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4f,
	0xc3, 0xdd, 0xd8, 0x98, 0x00, 0x00, 0x00,
}
